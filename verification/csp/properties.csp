-- root: curiosity.csp
-- properties.csp

-- Checks that if a client sends a goal, then it will begin execution on the right server
SendThenExecute =
  send_goal_arm?_ -> executeGoal.arm -> SKIP
  |||
  send_goal_mast?_ -> executeGoal.mast -> SKIP
  |||
  send_goal_wheels?_ -> executeGoal.wheels -> SKIP

assert SendThenExecute [T= Curiosity\(diff(Events, {|send_goal_arm, send_goal_mast, send_goal_wheels, executeGoal |}) )
-- Traces, becasue otherwise it fails because of the data

-- Checks that if a client sends a goal, eventually it gets a result
SendThenResult =
  send_goal_arm?_ -> get_result.arm?_ -> SKIP
  |||
  send_goal_mast?_ -> get_result.mast?_ -> SKIP
  |||
  send_goal_wheels?_ -> get_result.wheels?_ -> SKIP

assert SendThenResult [T= Curiosity\(diff(Events, {|send_goal_arm, send_goal_mast, send_goal_wheels, get_result |}) )
-- Traces, becasue otherwise it fails because of the data

-- Checks that once the hardware node has told the agent it's ready, it can accept an action, then
-- eventually sends the result of the action
AgentThenResult =

curiosity_to_agent_nodeName.arm ->
gwendolen_curiosity_arm?goal ->
arm_curiosity_to_agent_nodeResult?goal ->
SKIP

|||

curiosity_to_agent_nodeName.mast ->
gwendolen_curiosity_mast?goal ->
mast_curiosity_to_agent_nodeResult?goal ->
SKIP

|||

curiosity_to_agent_nodeName.wheels ->
gwendolen_curiosity_wheels?goal ->
wheels_curiosity_to_agent_nodeResult?goal -> 
SKIP


-- Overarching check that the agent communicating with a client triggers the right events. Covers some of the previous two checks

AgentTo

gwendolen_curiosity_arm
